{"interfaceLanguages":{"swift":[{"children":[{"title":"Container Types","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/==(_:_:)","title":"static func == (TOMLTable, TOMLTable) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/init(_:)","title":"init<V>(V) throws","type":"init"},{"path":"\/documentation\/tomlkit\/tomltable\/init(_:inline:)","title":"init([String : TOMLValueConvertible], inline: Bool)","type":"init"},{"path":"\/documentation\/tomlkit\/tomltable\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, TOMLValueConvertible)...)","type":"init"},{"path":"\/documentation\/tomlkit\/tomltable\/init(inline:)","title":"init(inline: Bool)","type":"init"},{"path":"\/documentation\/tomlkit\/tomltable\/init(string:)","title":"init(string: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/inline","title":"var inline: Bool","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/ishomogeneous","title":"var isHomogeneous: Bool","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/keys","title":"var keys: [String]","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/type","title":"var type: TOMLType","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/values","title":"var values: [TOMLValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/contains(element:)","title":"func contains(element: TOMLValueConvertible) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/contains(key:)","title":"func contains(key: String) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/convert(to:options:)","title":"func convert(to: ConversionFormat, options: FormatOptions) -> String","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/insert(_:at:)","title":"func insert(TOMLValueConvertible, at: String)","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/remove(at:)","title":"func remove(at: String) -> TOMLValueConvertible?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/subscript(_:)-76dpr","title":"subscript(String) -> TOMLValueConvertible?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomltable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/flatmap(_:)-2hdyk","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/flatmap(_:)-5bsr6","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/makeiterator()","title":"func makeIterator() -> TOMLTableIterator","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/sorted(using:)-4maaw","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/sorted(using:)-88feh","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomltable\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/tomlkit\/tomltable\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/date","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltable\/time","title":"var time: TOMLTime?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltable\/subscript(_:)-7c6zn","title":"subscript(String) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomltable\/subscript(_:)-89oec","title":"subscript(Int) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomltable\/tomlvalueconvertible-implementations","title":"TOMLValueConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomltable","title":"TOMLTable","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltableiterator\/next()","title":"func next() -> (String, TOMLValueConvertible)?","type":"method"}],"path":"\/documentation\/tomlkit\/tomltableiterator","title":"TOMLTableIterator","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/==(_:_:)","title":"static func == (TOMLArray, TOMLArray) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/tomlkit\/tomlarray\/init(_:)-3zp0l","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlarray\/init(_:)-62rsc","title":"init([TOMLValueConvertible])","type":"init"},{"path":"\/documentation\/tomlkit\/tomlarray\/init(arrayliteral:)","title":"init(arrayLiteral: TOMLValueConvertible...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/count-754jl","title":"var count: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/isempty-22s9b","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/type","title":"var type: TOMLType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/makeiterator()","title":"func makeIterator() -> TOMLArrayIterator","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/tomlkit\/tomlarray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/count-5xpem","title":"var count: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/indices","title":"var indices: Range<Index>","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/isempty-7lpkd","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/underestimatedcount-80rhz","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/map(_:)-1oohl","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-42zfe","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-5okle","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-6f1f","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-7xd52","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/index","title":"TOMLArray.Index","type":"typealias"}],"path":"\/documentation\/tomlkit\/tomlarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomlarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/partition(by:)-83qy7","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/partition(by:)-aakr","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/sort(using:)-53uuy","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/sort(using:)-6r65v","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-1oz9q","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-1pfuy","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-4r5ur","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-4vxx5","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-6rwkn","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomlarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/tomlkit\/tomlarray\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/+(_:_:)-1g362","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/tomlkit\/tomlarray\/+(_:_:)-40mop","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/tomlkit\/tomlarray\/+(_:_:)-6lb83","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/tomlkit\/tomlarray\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/init(_:)-667e","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlarray\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/append(_:)","title":"func append(Element)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/append(contentsof:)","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/insert(_:at:)","title":"func insert(Element, at: Index)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/insert(contentsof:at:)","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/remove(at:)","title":"func remove(at: Index) -> Element","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removeall(where:)-42lg1","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removeall(where:)-hw65","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removefirst()","title":"func removeFirst() -> TOMLValueConvertible","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/removesubrange(_:)","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/replacesubrange(_:with:)","title":"func replaceSubrange<C>(Range<Int>, with: C)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/tomlkit\/tomlarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/underestimatedcount-8qlsq","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/flatmap(_:)-1kk7f","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/flatmap(_:)-49er7","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/map(_:)-3o5ch","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/sorted(using:)-1ukac","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/sorted(using:)-7j122","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/tomlarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/element","title":"TOMLArray.Element","type":"typealias"}],"path":"\/documentation\/tomlkit\/tomlarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/date","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlarray\/time","title":"var time: TOMLTime?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-7ek15","title":"subscript(Int) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlarray\/subscript(_:)-k61f","title":"subscript(String) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomlarray\/tomlvalueconvertible-implementations","title":"TOMLValueConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomlarray","title":"TOMLArray","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlarrayiterator\/next()","title":"func next() -> TOMLValueConvertible?","type":"method"}],"path":"\/documentation\/tomlkit\/tomlarrayiterator","title":"TOMLArrayIterator","type":"struct"},{"title":"Date and Time","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldate\/==(_:_:)","title":"static func == (TOMLDate, TOMLDate) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldate\/init(date:)","title":"init?(date: Date)","type":"init"},{"path":"\/documentation\/tomlkit\/tomldate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tomlkit\/tomldate\/init(year:month:day:)","title":"init(year: Int, month: Int, day: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldate\/date-2v9rh","title":"var date: Date?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/day","title":"var day: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/month","title":"var month: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/type","title":"var type: TOMLType","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/year","title":"var year: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomldate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldate\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/date-5ervo","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldate\/time","title":"var time: TOMLTime?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldate\/subscript(_:)-2e9b6","title":"subscript(String) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomldate\/subscript(_:)-52s3e","title":"subscript(Int) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomldate\/tomlvalueconvertible-implementations","title":"TOMLValueConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomldate","title":"TOMLDate","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltime\/==(_:_:)","title":"static func == (TOMLTime, TOMLTime) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltime\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tomlkit\/tomltime\/init(hour:minute:second:nanosecond:)","title":"init(hour: Int, minute: Int, second: Int, nanoSecond: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltime\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/hour","title":"var hour: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/minute","title":"var minute: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/nanosecond","title":"var nanoSecond: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/second","title":"var second: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/type","title":"var type: TOMLType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomltime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltime\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/date","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomltime\/time","title":"var time: TOMLTime?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltime\/subscript(_:)-3bxv5","title":"subscript(String) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomltime\/subscript(_:)-3t22o","title":"subscript(Int) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomltime\/tomlvalueconvertible-implementations","title":"TOMLValueConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomltime","title":"TOMLTime","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltimeoffset\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tomlkit\/tomltimeoffset\/init(hours:minutes:)","title":"init(hours: Int, minutes: Int)","type":"init"},{"path":"\/documentation\/tomlkit\/tomltimeoffset\/init(offset:)","title":"init(offset: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltimeoffset\/offset","title":"var offset: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltimeoffset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomltimeoffset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomltimeoffset","title":"TOMLTimeOffset","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldatetime\/==(_:_:)","title":"static func == (TOMLDateTime, TOMLDateTime) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldatetime\/init(date:)","title":"init?(date: Date)","type":"init"},{"path":"\/documentation\/tomlkit\/tomldatetime\/init(date:time:offset:)","title":"init(date: TOMLDate, time: TOMLTime, offset: TOMLTimeOffset?)","type":"init"},{"path":"\/documentation\/tomlkit\/tomldatetime\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldatetime\/date-7jkl5","title":"var date: TOMLDate","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/fdate","title":"var fDate: Date?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/offset","title":"var offset: TOMLTimeOffset?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/time-993jt","title":"var time: TOMLTime","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/type","title":"var type: TOMLType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldatetime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomldatetime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldatetime\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/date-6jhv8","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldatetime\/time-6jp3m","title":"var time: TOMLTime?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldatetime\/subscript(_:)-3fl7c","title":"subscript(String) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomldatetime\/subscript(_:)-435kh","title":"subscript(Int) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomldatetime\/tomlvalueconvertible-implementations","title":"TOMLValueConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomldatetime","title":"TOMLDateTime","type":"struct"},{"title":"Integers","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlint\/==(_:_:)","title":"static func == (TOMLInt, TOMLInt) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlint\/init(_:options:)","title":"init<I>(I, options: ValueOptions)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlint\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlint\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/options","title":"var options: ValueOptions","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/type","title":"var type: TOMLType","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/value","title":"var value: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlint\/integerliteraltype","title":"TOMLInt.IntegerLiteralType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomlint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlint\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/date","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlint\/time","title":"var time: TOMLTime?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlint\/subscript(_:)-15x06","title":"subscript(String) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlint\/subscript(_:)-6exsj","title":"subscript(Int) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomlint\/tomlvalueconvertible-implementations","title":"TOMLValueConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomlint","title":"TOMLInt","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/valueoptions\/formatasbinary","title":"case formatAsBinary","type":"case"},{"path":"\/documentation\/tomlkit\/valueoptions\/formatashexadecimal","title":"case formatAsHexadecimal","type":"case"},{"path":"\/documentation\/tomlkit\/valueoptions\/formatasoctal","title":"case formatAsOctal","type":"case"},{"path":"\/documentation\/tomlkit\/valueoptions\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/valueoptions\/init(rawvalue:)","title":"init?(rawValue: UInt16)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/valueoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/valueoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/valueoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/valueoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tomlkit\/valueoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/valueoptions","title":"ValueOptions","type":"enum"},{"title":"Other Types","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/date","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/time","title":"var time: TOMLTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/type","title":"var type: TOMLType","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/subscript(_:)-2aniq","title":"subscript(String) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlvalueconvertible\/subscript(_:)-4zvtz","title":"subscript(Int) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomlvalueconvertible","title":"TOMLValueConvertible","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/==(_:_:)","title":"static func == (TOMLValue, TOMLValue) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(_:)-1ez77","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(_:)-1p811","title":"init(TOMLInt)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(_:)-39xjb","title":"init(TOMLDateTime)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(_:)-5eyvw","title":"init(TOMLDate)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(_:)-6l5ga","title":"init(TOMLArray)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(_:)-80wgd","title":"init(TOMLTable)","type":"init"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(_:)-9xuwz","title":"init(TOMLTime)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/tomlvalue","title":"var tomlValue: TOMLValue","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/type","title":"var type: TOMLType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomlvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(arrayliteral:)","title":"init(arrayLiteral: TOMLValue...)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(booleanliteral:)","title":"init(booleanLiteral: Bool)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, TOMLValue)...)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(floatliteral:)","title":"init(floatLiteral: Double)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/tomlkit\/tomlvalue\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/array","title":"var array: TOMLArray?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/bool","title":"var bool: Bool?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/date","title":"var date: TOMLDate?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/datetime","title":"var dateTime: TOMLDateTime?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/table","title":"var table: TOMLTable?","type":"property"},{"path":"\/documentation\/tomlkit\/tomlvalue\/time","title":"var time: TOMLTime?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlvalue\/subscript(_:)-9owvh","title":"subscript(Int) -> TOMLValue?","type":"subscript"},{"path":"\/documentation\/tomlkit\/tomlvalue\/subscript(_:)-av83","title":"subscript(String) -> TOMLValue?","type":"subscript"}],"path":"\/documentation\/tomlkit\/tomlvalue\/tomlvalueconvertible-implementations","title":"TOMLValueConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomlvalue","title":"TOMLValue","type":"struct"},{"title":"Encoding and Decoding","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlencoder\/init(options:dataencoder:)","title":"init(options: FormatOptions, dataEncoder: (Data) -> TOMLValueConvertible)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlencoder\/dataencoder","title":"var dataEncoder: (Data) -> TOMLValueConvertible","type":"property"},{"path":"\/documentation\/tomlkit\/tomlencoder\/options","title":"var options: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/tomlencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlencoder\/encode(_:)-3u6y1","title":"func encode<T>(T) throws -> String","type":"method"},{"path":"\/documentation\/tomlkit\/tomlencoder\/encode(_:)-3wdpt","title":"func encode<T>(T) throws -> TOMLTable","type":"method"}],"path":"\/documentation\/tomlkit\/tomlencoder","title":"TOMLEncoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldecoder\/init(strictdecoding:datadecoder:)","title":"init(strictDecoding: Bool, dataDecoder: (TOMLValueConvertible) -> Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldecoder\/datadecoder","title":"var dataDecoder: (TOMLValueConvertible) -> Data?","type":"property"},{"path":"\/documentation\/tomlkit\/tomldecoder\/strictdecoding","title":"var strictDecoding: Bool","type":"property"},{"path":"\/documentation\/tomlkit\/tomldecoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomldecoder\/decode(_:from:)-74pl6","title":"func decode<T>(T.Type, from: TOMLTable) throws -> T","type":"method"},{"path":"\/documentation\/tomlkit\/tomldecoder\/decode(_:from:)-chwp","title":"func decode<T>(T.Type, from: String) throws -> T","type":"method"}],"path":"\/documentation\/tomlkit\/tomldecoder","title":"TOMLDecoder","type":"struct"},{"title":"Formatting","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/init(rawvalue:)","title":"init(rawValue: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/rawvalue","title":"let rawValue: UInt64","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/allowbinaryintegers","title":"static let allowBinaryIntegers: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/allowhexadecimalintegers","title":"static let allowHexadecimalIntegers: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/allowliteralstrings","title":"static let allowLiteralStrings: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/allowmultilinestrings","title":"static let allowMultilineStrings: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/allowoctalintegers","title":"static let allowOctalIntegers: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/allowrealtabsinstrings","title":"static let allowRealTabsInStrings: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/allowunicodestrings","title":"static let allowUnicodeStrings: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/indentarrayelements","title":"static let indentArrayElements: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/indentsubtables","title":"static let indentSubTables: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/indentations","title":"static let indentations: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/quotedateandtimes","title":"static let quoteDateAndTimes: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/quoteinfinitesandnans","title":"static let quoteInfinitesAndNaNs: FormatOptions","type":"property"},{"path":"\/documentation\/tomlkit\/formatoptions\/relaxedfloatprecision","title":"static let relaxedFloatPrecision: FormatOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/formatoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/tomlkit\/formatoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/tomlkit\/formatoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/formatoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/tomlkit\/formatoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/tomlkit\/formatoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/formatoptions","title":"FormatOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/conversionformat\/json","title":"case json","type":"case"},{"path":"\/documentation\/tomlkit\/conversionformat\/toml","title":"case toml","type":"case"},{"path":"\/documentation\/tomlkit\/conversionformat\/yaml","title":"case yaml","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/conversionformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/conversionformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/conversionformat","title":"ConversionFormat","type":"enum"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlparseerror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomlparseerror\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomlparseerror\/source","title":"let source: TOMLSourceRegion","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/tomlkit\/tomlparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomlparseerror","title":"TOMLParseError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlsourceregion\/begin","title":"let begin: TOMLSourcePosition","type":"property"},{"path":"\/documentation\/tomlkit\/tomlsourceregion\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomlsourceregion\/end","title":"let end: TOMLSourcePosition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlsourceregion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomlsourceregion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomlsourceregion","title":"TOMLSourceRegion","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlsourceposition\/column","title":"let column: Int","type":"property"},{"path":"\/documentation\/tomlkit\/tomlsourceposition\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tomlkit\/tomlsourceposition\/line","title":"let line: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomlsourceposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomlsourceposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomlsourceposition","title":"TOMLSourcePosition","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/unexpectedkeyserror\/keys","title":"let keys: [String : [CodingKey]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/unexpectedkeyserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/tomlkit\/unexpectedkeyserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/unexpectedkeyserror","title":"UnexpectedKeysError","type":"struct"},{"title":"Other","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltype\/array","title":"case array","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/date","title":"case date","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/datetime","title":"case dateTime","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/double","title":"case double","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/int","title":"case int","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/string","title":"case string","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/table","title":"case table","type":"case"},{"path":"\/documentation\/tomlkit\/tomltype\/time","title":"case time","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tomlkit\/tomltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tomlkit\/tomltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tomlkit\/tomltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tomlkit\/tomltype","title":"TOMLType","type":"enum"}],"path":"\/documentation\/tomlkit","title":"TOMLKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}