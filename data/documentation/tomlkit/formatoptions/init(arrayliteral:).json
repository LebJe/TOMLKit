{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"...)"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A list of elements of the new set.","type":"text"}]}],"name":"arrayLiteral"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"type":"text","text":" "},{"type":"text","text":"you use an array literal. Instead, create a new set using an array"},{"text":" ","type":"text"},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"text":" ","type":"text"},{"text":"square brackets. You can use an array literal anywhere a set is expected","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"by the type context."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"text":" ","type":"text"},{"type":"text","text":"strings:"}]},{"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"type":"codeListing","syntax":null}]}],"metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"TOMLKit"}],"title":"init(arrayLiteral:)","symbolKind":"init","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:7TOMLKit13FormatOptionsV","extendedModule":"Swift","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"...)","kind":"text"}],"roleHeading":"Initializer"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/FormatOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/tomlkit\/formatoptions\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/FormatOptions","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/FormatOptions\/SetAlgebra-Implementations"]]},"references":{"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLTable":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TOMLTable","kind":"identifier"}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable","kind":"symbol","title":"TOMLTable","url":"\/documentation\/tomlkit\/tomltable","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"https:\/\/toml.io\/en\/v1.0.0#table"},{"text":" in a TOML document.","type":"text"}],"navigatorTitle":[{"text":"TOMLTable","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/FormatOptions":{"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/FormatOptions","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"FormatOptions","kind":"identifier"}],"url":"\/documentation\/tomlkit\/formatoptions","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormatOptions"}],"title":"FormatOptions","abstract":[{"type":"text","text":"Formatting options that are used when converting a "},{"type":"reference","identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable","isActive":true},{"text":" to a JSON, YAML, or TOML document.","type":"text"}],"type":"topic"},"https://toml.io":{"title":"TOML","titleInlineContent":[{"type":"text","text":"TOML"}],"url":"https:\/\/toml.io","type":"link","identifier":"https:\/\/toml.io"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit":{"kind":"symbol","title":"TOMLKit","role":"collection","url":"\/documentation\/tomlkit","type":"topic","abstract":[{"type":"text","text":"TOMLKit is a "},{"isActive":true,"type":"reference","identifier":"https:\/\/toml.io"},{"type":"text","text":" parser and serializer powered by "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit"},"https://github.com/marzer/tomlplusplus/":{"titleInlineContent":[{"text":"toml++","type":"text"}],"url":"https:\/\/github.com\/marzer\/tomlplusplus\/","type":"link","identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/","title":"toml++"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/FormatOptions/SetAlgebra-Implementations":{"url":"\/documentation\/tomlkit\/formatoptions\/setalgebra-implementations","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/FormatOptions\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","role":"collectionGroup"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/FormatOptions/init(arrayLiteral:)":{"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}]},"title":"init(arrayLiteral:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}],"url":"\/documentation\/tomlkit\/formatoptions\/init(arrayliteral:)","type":"topic","identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/FormatOptions\/init(arrayLiteral:)"}}}