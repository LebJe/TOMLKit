{"metadata":{"modules":[{"relatedModules":["Swift"],"name":"TOMLKit"}],"externalID":"s:STsE4drop5whiles17DropWhileSequenceVyxGSb7ElementQzKXE_tKF::SYNTHESIZED::s:7TOMLKit9TOMLTableC","role":"symbol","extendedModule":"Swift","title":"drop(while:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"drop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s17DropWhileSequenceV","text":"DropWhileSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"identifier":{"url":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable\/drop(while:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/tomlkit\/tomltable\/drop(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable\/Sequence-Implementations"]]},"abstract":[{"text":"Returns a sequence by skipping the initial, consecutive elements that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"satisfy the given predicate."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"DropWhileSequence","kind":"typeIdentifier","preciseIdentifier":"s:s17DropWhileSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as"},{"type":"text","text":" "},{"type":"text","text":"its argument and returns a Boolean value indicating whether the"},{"text":" ","type":"text"},{"text":"element should be included in the result.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"A sequence starting after the initial, consecutive elements"},{"text":" ","type":"text"},{"type":"text","text":"that satisfy "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The following example uses the ","type":"text"},{"type":"codeVoice","code":"drop(while:)"},{"type":"text","text":" method to skip over the"},{"text":" ","type":"text"},{"text":"positive numbers at the beginning of the ","type":"text"},{"code":"numbers","type":"codeVoice"},{"text":" array. The result","type":"text"},{"type":"text","text":" "},{"type":"text","text":"begins with the first element of "},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" that does not satisfy"},{"type":"text","text":" "},{"type":"codeVoice","code":"predicate"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let numbers = [3, 7, 4, -2, 9, -6, 10, 1]","let startingWithNegative = numbers.drop(while: { $0 > 0 })","\/\/ startingWithNegative == [-2, 9, -6, 10, 1]"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":" matches every element in the sequence, the result is an","type":"text"},{"type":"text","text":" "},{"text":"empty sequence.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the number of elements to drop from"},{"text":" ","type":"text"},{"type":"text","text":"the beginning of the sequence."}],"type":"paragraph"}],"name":"Complexity"}]}],"references":{"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLTable/Sequence-Implementations":{"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable\/Sequence-Implementations","kind":"article","url":"\/documentation\/tomlkit\/tomltable\/sequence-implementations","title":"Sequence Implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLTable":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TOMLTable","kind":"identifier"}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable","kind":"symbol","title":"TOMLTable","url":"\/documentation\/tomlkit\/tomltable","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"https:\/\/toml.io\/en\/v1.0.0#table"},{"text":" in a TOML document.","type":"text"}],"navigatorTitle":[{"text":"TOMLTable","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit":{"kind":"symbol","title":"TOMLKit","role":"collection","url":"\/documentation\/tomlkit","type":"topic","abstract":[{"type":"text","text":"TOMLKit is a "},{"isActive":true,"type":"reference","identifier":"https:\/\/toml.io"},{"type":"text","text":" parser and serializer powered by "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit"},"https://toml.io":{"title":"TOML","url":"https:\/\/toml.io","titleInlineContent":[{"text":"TOML","type":"text"}],"type":"link","identifier":"https:\/\/toml.io"},"https://toml.io/en/v1.0.0#table":{"type":"link","identifier":"https:\/\/toml.io\/en\/v1.0.0#table","title":"table","titleInlineContent":[{"text":"table","type":"text"}],"url":"https:\/\/toml.io\/en\/v1.0.0#table"},"https://github.com/marzer/tomlplusplus/":{"title":"toml++","url":"https:\/\/github.com\/marzer\/tomlplusplus\/","titleInlineContent":[{"text":"toml++","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLTable/drop(while:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/tomlkit\/tomltable\/drop(while:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"DropWhileSequence","preciseIdentifier":"s:s17DropWhileSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLTable\/drop(while:)","abstract":[{"text":"Returns a sequence by skipping the initial, consecutive elements that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"satisfy the given predicate."}],"title":"drop(while:)","type":"topic"}}}