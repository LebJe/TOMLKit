{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tomlkit\/tomlarray\/sort(by:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/sort(by:)"},"kind":"symbol","abstract":[{"text":"Sorts the collection in place, using the given predicate as the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"comparison between elements."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sort","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"kind":"internalParam","text":"areInIncreasingOrder"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"first argument should be ordered before its second argument;"},{"text":" ","type":"text"},{"type":"text","text":"otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":". If "},{"code":"areInIncreasingOrder","type":"codeVoice"},{"type":"text","text":" throws an error during"},{"text":" ","type":"text"},{"type":"text","text":"the sort, the elements may be in a different order, but none will be"},{"text":" ","type":"text"},{"type":"text","text":"lost."}]}],"name":"areInIncreasingOrder"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"When you want to sort a collection of elements that donâ€™t conform to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol, pass a closure to this method that returns","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"text":" when the first element should be ordered before the second.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the closure provides an ordering for an array","type":"text"},{"type":"text","text":" "},{"text":"of a custom enumeration that describes an HTTP response. The predicate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"orders errors before successes and sorts the error responses by their"},{"type":"text","text":" "},{"type":"text","text":"error code."}]},{"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","var responses: [HTTPResponse] = [.error(500), .ok, .ok, .error(404), .error(403)]","responses.sort {","    switch ($0, $1) {","    \/\/ Order errors by code","    case let (.error(aCode), .error(bCode)):","        return aCode < bCode","","    \/\/ All successes are equivalent, so none is before any other","    case (.ok, .ok): return false","","    \/\/ Order errors before successes","    case (.error, .ok): return true","    case (.ok, .error): return false","    }","}","print(responses)","\/\/ Prints \"[.error(403), .error(404), .error(500), .ok, .ok]\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Alternatively, use this method to sort a collection of elements that do"},{"type":"text","text":" "},{"text":"conform to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" when you want the sort to be descending instead"},{"text":" ","type":"text"},{"text":"of ascending. Pass the greater-than operator (","type":"text"},{"type":"codeVoice","code":">"},{"type":"text","text":") operator as the"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["var students = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","students.sort(by: >)","print(students)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"strict weak ordering"}]},{"type":"text","text":" over the"},{"type":"text","text":" "},{"type":"text","text":"elements. That is, for any elements "},{"code":"a","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"text":", the following","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conditions must hold:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"text":" is always ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"both ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":", then "},{"type":"codeVoice","code":"areInIncreasingOrder(a, c)"},{"type":"text","text":" is also "},{"type":"codeVoice","code":"true"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(Transitive comparability)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Two elements are ","type":"text"},{"inlineContent":[{"text":"incomparable","type":"text"}],"type":"emphasis"},{"type":"text","text":" if neither is ordered before the other"},{"type":"text","text":" "},{"type":"text","text":"according to the predicate. If "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":" are incomparable, and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"c"},{"type":"text","text":" are incomparable, then "},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"text":"(Transitive incomparability)","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sorting algorithm is guaranteed to be stable. A stable sort"},{"text":" ","type":"text"},{"text":"preserves the relative order of elements for which","type":"text"},{"text":" ","type":"text"},{"code":"areInIncreasingOrder","type":"codeVoice"},{"text":" does not establish an order.","type":"text"}]},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" log ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/MutableCollection-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"TOMLKit","relatedModules":["Swift"]}],"externalID":"s:SMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKF::SYNTHESIZED::s:7TOMLKit9TOMLArrayC","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"Swift","title":"sort(by:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}]},"references":{"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray":{"kind":"symbol","title":"TOMLArray","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TOMLArray"}],"url":"\/documentation\/tomlkit\/tomlarray","type":"topic","navigatorTitle":[{"text":"TOMLArray","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"https:\/\/toml.io\/en\/v1.0.0#array"},{"type":"text","text":" in a TOML document."}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray"},"https://toml.io":{"title":"TOML","identifier":"https:\/\/toml.io","type":"link","titleInlineContent":[{"text":"TOML","type":"text"}],"url":"https:\/\/toml.io"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray/sort(by:)":{"abstract":[{"type":"text","text":"Sorts the collection in place, using the given predicate as the"},{"text":" ","type":"text"},{"type":"text","text":"comparison between elements."}],"url":"\/documentation\/tomlkit\/tomlarray\/sort(by:)","kind":"symbol","identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/sort(by:)","title":"sort(by:)","type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sort","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}]},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray/MutableCollection-Implementations":{"type":"topic","url":"\/documentation\/tomlkit\/tomlarray\/mutablecollection-implementations","abstract":[],"kind":"article","title":"MutableCollection Implementations","identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/MutableCollection-Implementations","role":"collectionGroup"},"https://toml.io/en/v1.0.0#array":{"title":"array","url":"https:\/\/toml.io\/en\/v1.0.0#array","titleInlineContent":[{"text":"array","type":"text"}],"type":"link","identifier":"https:\/\/toml.io\/en\/v1.0.0#array"},"https://github.com/marzer/tomlplusplus/":{"title":"toml++","identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/","type":"link","titleInlineContent":[{"text":"toml++","type":"text"}],"url":"https:\/\/github.com\/marzer\/tomlplusplus\/"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit":{"kind":"symbol","title":"TOMLKit","role":"collection","url":"\/documentation\/tomlkit","type":"topic","abstract":[{"type":"text","text":"TOMLKit is a "},{"isActive":true,"type":"reference","identifier":"https:\/\/toml.io"},{"type":"text","text":" parser and serializer powered by "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit"}}}