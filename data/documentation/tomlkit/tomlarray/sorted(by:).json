{"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"type":"text","text":" "},{"type":"text","text":"the comparison between elements."}],"identifier":{"url":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/sorted(by:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"text":"areInIncreasingOrder","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if its","type":"text"},{"type":"text","text":" "},{"text":"first argument should be ordered before its second argument;","type":"text"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"areInIncreasingOrder"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A sorted array of the sequence’s elements.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"When you want to sort a sequence of elements that don’t conform to the","type":"text"},{"type":"text","text":" "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol, pass a predicate to this method that returns"},{"text":" ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" when the first element should be ordered before the second. The"},{"type":"text","text":" "},{"type":"text","text":"elements of the resulting array are ordered according to the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In the following example, the predicate provides an ordering for an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a custom "},{"code":"HTTPResponse","type":"codeVoice"},{"type":"text","text":" type. The predicate orders errors before"},{"text":" ","type":"text"},{"type":"text","text":"successes and sorts the error responses by their error code."}]},{"type":"codeListing","syntax":null,"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let responses: [HTTPResponse] = [.error(500), .ok, .ok, .error(404), .error(403)]","let sortedResponses = responses.sorted {","    switch ($0, $1) {","    \/\/ Order errors by code","    case let (.error(aCode), .error(bCode)):","        return aCode < bCode","","    \/\/ All successes are equivalent, so none is before any other","    case (.ok, .ok): return false","","    \/\/ Order errors before successes","    case (.error, .ok): return true","    case (.ok, .error): return false","    }","}","print(sortedResponses)","\/\/ Prints \"[.error(403), .error(404), .error(500), .ok, .ok]\""]},{"inlineContent":[{"type":"text","text":"You also use this method to sort elements that conform to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol in descending order. To sort your sequence in"},{"type":"text","text":" "},{"type":"text","text":"descending order, pass the greater-than operator ("},{"type":"codeVoice","code":">"},{"text":") as the","type":"text"},{"type":"text","text":" "},{"code":"areInIncreasingOrder","type":"codeVoice"},{"text":" parameter.","type":"text"}],"type":"paragraph"},{"code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling the related "},{"code":"sorted()","type":"codeVoice"},{"type":"text","text":" method is equivalent to calling this"},{"text":" ","type":"text"},{"text":"method and passing the less-than operator (","type":"text"},{"type":"codeVoice","code":"<"},{"type":"text","text":") as the predicate."}]},{"syntax":null,"type":"codeListing","code":["print(students.sorted())","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\"","print(students.sorted(by: <))","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""]},{"type":"paragraph","inlineContent":[{"text":"The predicate must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"strict weak ordering"}]},{"type":"text","text":" over the elements. That"},{"text":" ","type":"text"},{"text":"is, for any elements ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":", "},{"code":"b","type":"codeVoice"},{"type":"text","text":", and "},{"code":"c","type":"codeVoice"},{"text":", the following conditions must","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"hold:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"text":" is always ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"text":" are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"both "},{"type":"codeVoice","code":"true"},{"text":", then ","type":"text"},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"text":" is also ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(Transitive comparability)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Two elements are "},{"type":"emphasis","inlineContent":[{"type":"text","text":"incomparable"}]},{"type":"text","text":" if neither is ordered before the other"},{"type":"text","text":" "},{"text":"according to the predicate. If ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" are incomparable, and "},{"type":"codeVoice","code":"b"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"code":"c","type":"codeVoice"},{"text":" are incomparable, then ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(Transitive incomparability)"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preserves the relative order of elements for which"},{"type":"text","text":" "},{"code":"areInIncreasingOrder","type":"codeVoice"},{"type":"text","text":" does not establish an order."}],"type":"paragraph"},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" log ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the sequence."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/Sequence-Implementations"]]},"metadata":{"roleHeading":"Instance Method","title":"sorted(by:)","modules":[{"name":"TOMLKit","relatedModules":["Swift"]}],"symbolKind":"method","role":"symbol","externalID":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:7TOMLKit9TOMLArrayC","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tomlkit\/tomlarray\/sorted(by:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray/sorted(by:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"type":"text","text":" "},{"text":"the comparison between elements.","type":"text"}],"title":"sorted(by:)","kind":"symbol","identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/sorted(by:)","url":"\/documentation\/tomlkit\/tomlarray\/sorted(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"https://toml.io":{"identifier":"https:\/\/toml.io","type":"link","title":"TOML","titleInlineContent":[{"type":"text","text":"TOML"}],"url":"https:\/\/toml.io"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray":{"title":"TOMLArray","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TOMLArray","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"identifier":"https:\/\/toml.io\/en\/v1.0.0#array","isActive":true,"type":"reference"},{"type":"text","text":" in a TOML document."}],"type":"topic","navigatorTitle":[{"text":"TOMLArray","kind":"identifier"}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray","url":"\/documentation\/tomlkit\/tomlarray","kind":"symbol","role":"symbol"},"https://toml.io/en/v1.0.0#array":{"titleInlineContent":[{"type":"text","text":"array"}],"url":"https:\/\/toml.io\/en\/v1.0.0#array","title":"array","type":"link","identifier":"https:\/\/toml.io\/en\/v1.0.0#array"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray/Sequence-Implementations":{"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/Sequence-Implementations","title":"Sequence Implementations","url":"\/documentation\/tomlkit\/tomlarray\/sequence-implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit":{"abstract":[{"type":"text","text":"TOMLKit is a "},{"isActive":true,"identifier":"https:\/\/toml.io","type":"reference"},{"text":" parser and serializer powered by ","type":"text"},{"identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit","url":"\/documentation\/tomlkit","title":"TOMLKit","type":"topic","kind":"symbol","role":"collection"},"https://github.com/marzer/tomlplusplus/":{"identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/","type":"link","title":"toml++","titleInlineContent":[{"type":"text","text":"toml++"}],"url":"https:\/\/github.com\/marzer\/tomlplusplus\/"}}}