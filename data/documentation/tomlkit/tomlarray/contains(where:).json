{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an element of the sequence","type":"text"},{"type":"text","text":" "},{"text":"as its argument and returns a Boolean value that indicates whether","type":"text"},{"type":"text","text":" "},{"text":"the passed element represents a match.","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the sequence contains an element that satisfies"},{"text":" ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":"; otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"You can use the predicate to check for an element of a type that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"doesnâ€™t conform to the "},{"type":"codeVoice","code":"Equatable"},{"text":" protocol, such as the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"HTTPResponse"},{"type":"text","text":" enumeration in this example."}],"type":"paragraph"},{"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let lastThreeResponses: [HTTPResponse] = [.ok, .ok, .error(404)]","let hadError = lastThreeResponses.contains { element in","    if case .error = element {","        return true","    } else {","        return false","    }","}","\/\/ 'hadError' == true"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Alternatively, a predicate can be satisfied by a range of "},{"type":"codeVoice","code":"Equatable"},{"text":" ","type":"text"},{"text":"elements or a general condition. This example shows how you can check an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"array for an expense greater than $100."}],"type":"paragraph"},{"syntax":null,"code":["let expenses = [21.37, 55.21, 9.32, 10.18, 388.77, 11.41]","let hasBigPurchase = expenses.contains { $0 > 100 }","\/\/ 'hasBigPurchase' == true"],"type":"codeListing"},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tomlkit\/tomlarray\/contains(where:)"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/contains(where:)"},"metadata":{"title":"contains(where:)","role":"symbol","symbolKind":"method","externalID":"s:STsE8contains5whereS2b7ElementQzKXE_tKF::SYNTHESIZED::s:7TOMLKit9TOMLArrayC","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"TOMLKit"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"hierarchy":{"paths":[["doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray","doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/Sequence-Implementations"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence contains an"},{"text":" ","type":"text"},{"type":"text","text":"element that satisfies the given predicate."}],"references":{"https://toml.io":{"title":"TOML","url":"https:\/\/toml.io","titleInlineContent":[{"text":"TOML","type":"text"}],"type":"link","identifier":"https:\/\/toml.io"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray/Sequence-Implementations":{"kind":"article","title":"Sequence Implementations","role":"collectionGroup","url":"\/documentation\/tomlkit\/tomlarray\/sequence-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/Sequence-Implementations"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit":{"kind":"symbol","title":"TOMLKit","role":"collection","url":"\/documentation\/tomlkit","type":"topic","abstract":[{"type":"text","text":"TOMLKit is a "},{"isActive":true,"type":"reference","identifier":"https:\/\/toml.io"},{"type":"text","text":" parser and serializer powered by "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit"},"https://toml.io/en/v1.0.0#array":{"title":"array","identifier":"https:\/\/toml.io\/en\/v1.0.0#array","type":"link","titleInlineContent":[{"text":"array","type":"text"}],"url":"https:\/\/toml.io\/en\/v1.0.0#array"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray":{"kind":"symbol","title":"TOMLArray","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TOMLArray"}],"url":"\/documentation\/tomlkit\/tomlarray","type":"topic","navigatorTitle":[{"text":"TOMLArray","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"https:\/\/toml.io\/en\/v1.0.0#array"},{"type":"text","text":" in a TOML document."}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray"},"https://github.com/marzer/tomlplusplus/":{"title":"toml++","url":"https:\/\/github.com\/marzer\/tomlplusplus\/","titleInlineContent":[{"text":"toml++","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/marzer\/tomlplusplus\/"},"doc://com.LebJe.TOMLKit/documentation/TOMLKit/TOMLArray/contains(where:)":{"title":"contains(where:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.LebJe.TOMLKit\/documentation\/TOMLKit\/TOMLArray\/contains(where:)","kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether the sequence contains an","type":"text"},{"text":" ","type":"text"},{"text":"element that satisfies the given predicate.","type":"text"}],"url":"\/documentation\/tomlkit\/tomlarray\/contains(where:)","type":"topic"}}}